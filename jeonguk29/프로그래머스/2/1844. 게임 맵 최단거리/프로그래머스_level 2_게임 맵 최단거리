from collections import deque

def solution(maps):
    n, m = len(maps), len(maps[0])
    
    # 상하좌우
    dx = [-1, 1, 0, 0]  # 위, 아래
    dy = [0, 0, -1, 1]  # 왼, 오

    # 큐: (x좌표, y좌표, 이동거리)
    queue = deque()
    queue.append((0, 0, 1))  # 시작 위치에서 거리 1부터 시작
    visited = [[False]*m for _ in range(n)]
    visited[0][0] = True

    while queue:
        x, y, dist = queue.popleft()

        if x == n-1 and y == m-1:
            return dist  # 도착하면 거리 반환

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            # 범위 체크
            if 0 <= nx < n and 0 <= ny < m:
                if maps[nx][ny] == 1 and not visited[nx][ny]:
                    visited[nx][ny] = True
                    queue.append((nx, ny, dist + 1))

    return -1  # 도달 불가
